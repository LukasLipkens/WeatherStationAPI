services:
  mqtt-broker:
    image: eclipse-mosquitto:2.0
    container_name: weatherstations_mqtt_broker
    ports:
      - "1883:1883" # default mqtt port
      - "9001:9001" # default mqtt over websockets port
    networks:
      - default
    volumes:
      - ../docker-data/mosquitto/config:/mosquitto/config:rw
      - ../docker-data/mosquitto/data:/mosquitto/data:rw
      - ../docker-data/mosquitto/log:/mosquitto/log:rw
    healthcheck:
      test: [ "CMD", "nc", "-zv", "localhost", "1883" ]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  db-mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: weatherstations_db_mssql
    user: root # don't like this but no other fix at the moment
    command: /bin/bash -c "
        sed -i 's/\r$//' /init/init.sh &&
        chmod +x /init/init.sh &&
        /bin/bash /init/init.sh
      "
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=${MSSQL_SERVERADMIN_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_USER_R=${DB_USER_R}
      - DB_USER_R_PASSWORD=${DB_USER_R_PASSWORD}
      - DB_USER_RW=${DB_USER_RW}
      - DB_USER_RW_PASSWORD=${DB_USER_RW_PASSWORD}
    ports:
      - "1433:1433"
    networks:
      - default
    volumes:
      - mssqldata:/var/opt/mssql
      - ../docker-data/mssql/init:/init:rw
      - ../docker-data/mssql/healthcheck:/healthcheck:rw
      - ../docker-data/mssql/log:/var/opt/mssql/log:rw
    healthcheck:
      test: [ "CMD", "/bin/bash", "/healthcheck/script.sh" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  api:
    image: weatherstations-api:dev
    container_name: weatherstations_api
    build:
      context: ../src/UCLL.Projects.WeatherStations.Api
      dockerfile: ./Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      #- ASPNETCORE_HTTPS_PORTS=8081
      - ASPNETCORE_HTTP_PORTS=8080
      - WEATHERSTATIONS_API_CONNECTIONSTRINGS__WeatherStationsDb=Server=db_mssql;Database=${DB_NAME}_prod;User=${DB_USER_RW};Password=${DB_USER_RW_PASSWORD};Trusted_Connection=True;TrustServerCertificate=True;Integrated Security=false;
    ports:
      #- "443:8081"
      - "80:8080"
    networks:
      - default
    depends_on:
      - db_mssql
    restart: unless-stopped

  mqtt-service:
    image: weatherstations-mqtt-service:dev
    container_name: weatherstations_mqtt_service
    build:
      context: ../src/UCLL.Projects.WeatherStations.MqttService
      dockerfile: ./Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - WEATHERSTATIONS_MQTTSERVICE_CONNECTIONSTRINGS__WeatherStationsDb=Server=db_mssql;Database=${DB_NAME}_prod;User=${DB_USER_RW};Password=${DB_USER_RW_PASSWORD};Trusted_Connection=True;TrustServerCertificate=True;Integrated Security=false;
      - WEATHERSTATIONS_MQTTSERVICE_MQTT__Host=mqtt
      - WEATHERSTATIONS_MQTTSERVICE_MQTT__Port=1883
      - WEATHERSTATIONS_MQTTSERVICE_MQTT__Username=${MQTT_USER}
      - WEATHERSTATIONS_MQTTSERVICE_MQTT__Password=${MQTT_USER_PASSWORD}
      - WEATHERSTATIONS_MQTTSERVICE_MQTT__ReceiveMaximumCount=1000
      - WEATHERSTATIONS_MQTTSERVICE_MQTT__ClientId=${MQTT_CLIENT_ID}
      - WEATHERSTATIONS_MQTTSERVICE_MQTT__SubscribeTopic=weatherstations/#
    networks:
      - default
    depends_on:
      - mqtt
      - db_mssql
    restart: unless-stopped

  graphql:
    image: weatherstations-graphql:dev
    container_name: weatherstations_graphql
    build:
      context: ../src/UCLL.Projects.WeatherStations.GraphQL
      dockerfile: ./Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_HTTP_PORTS=8080
      - WEATHERSTATIONS_GRAPHQL_CONNECTIONSTRINGS__WeatherStationsDb=Server=db_mssql;Database=${DB_NAME}_prod;User=${DB_USER_RW};Password=${DB_USER_RW_PASSWORD};Trusted_Connection=True;TrustServerCertificate=True;Integrated Security=false;
    ports:
      - "80:8080"
    networks:
      - default
    depends_on:
      - db_mssql
    restart: unless-stopped



volumes:
  mssqldata:



networks:
  default: